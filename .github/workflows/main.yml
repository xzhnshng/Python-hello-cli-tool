# This is a basic workflow to help you get started with Actions

name: Python hello-cli-tool CI/CD with GitHub Action (build image and push image to ECR)


on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  # This workflow contains multiple jobs: "install-format-lint-(test)", "build-and-push-image-to-ECR", "create-container-and-deploy"
  # Job1: "install-format-lint"
  install-format-lint:
  
    name: installation and format, lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9"]
    
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - name: Check out code
      uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        make install
    - name: Format code
      run: |
        make format
    - name: Lint with pylint
      run: |
        make lint
  
  # Job2: "build-and-push-image-to-ECR & deploy on EKS"
  deploy:
    
    name: Build image and push to ECR
    runs-on: ubuntu-latest
    
    steps:
    - name: Check out code
      uses: actions/checkout@v3
      
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
      
    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: hello-cli-tool
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        echo "Pushing image to ECR..."
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install
    
    - name: Update kube config
      run: aws eks update-kubeconfig --name hello-cli-tool --region us-east-1
    
    - name: Deploy image to Amazon EKS
      run: kubectl apply -f deployment.yaml
    
  
